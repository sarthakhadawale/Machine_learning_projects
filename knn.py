# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fV-0oj8cfGyg_mfBmnBeRw_6ZTDj4LPW
"""

from google.colab import files
data=files.upload()

import pandas as pd
knn=pd.read_csv("Classified Data",index_col=0)

knn.info()

knn.head()

knn.corr()

knn.mean()

x=knn.drop("TARGET CLASS",axis=1)

y=knn["TARGET CLASS"]

from sklearn.preprocessing import StandardScaler
scalar=StandardScaler()

scalar.fit(x)

scalar_feature=scalar.transform(x)

scalar_feature

knn.columns[:-1]

knn1=pd.DataFrame(scalar_feature,columns=knn.columns[:-1])

knn1.mean()

knn1.head()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(scalar_feature,y,random_state=40,test_size=0.30)

x_train.shape

from sklearn.neighbors import KNeighborsClassifier

knn_res=KNeighborsClassifier(n_neighbors=28)

knn_res.fit(x_train,y_train)

predict=knn_res.predict(x_test)

from sklearn.metrics import confusion_matrix,accuracy_score

confusion_matrix(predict,y_test)

accuracy_score(predict,y_test)

accuracy=[]

for i in range(1,40):
  knn_res=KNeighborsClassifier(n_neighbors=i)
  knn_res.fit(x_train,y_train)
  predict=knn_res.predict(x_test)
  from sklearn.metrics import confusion_matrix,accuracy_score
  accuracy.append(accuracy_score(predict,y_test))

import matplotlib.pyplot as plt
plt.plot(range(1,40),accuracy)

from operator import indexOf
import numpy as np
np.max(accuracy)
accuracy.index(0.95)

"""If we insert new data"""

te=x.loc[1:10]

predict=knn_res.predict(te)

predict